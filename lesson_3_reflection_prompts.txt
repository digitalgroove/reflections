(1)
When would you want to use a remote repository rather than keeping all your work
local?

    To backup data or to share/collaborate with others.

(2)
Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Because changes in the local repository might not be ready for production.
    The developer get to decide when it is ready for prime time.

(3)
Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Fork is used when you don't have permission to change someone else's repository.
    It makes a copy on your account. Cloning is making a copy of someone else's
    repository on a local machine. Branching is making a copy of previous commits.

(4)
What is the benefit of having a copy of the last known state of the remote
stored locally?

    It allows to identify a common ancestor for two conflicting changes. Based on
    that it is possible to see which changes everybody did.

(5)
How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Without Git or GitHub everybody would work on totally different parts of the
    software. It would be more difficult to collaborate on the same file.

(6)
When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Not messing up the master branch by getting someone else to take a look at
    your code first.
