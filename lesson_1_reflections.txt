How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    The differences allowed me to focus on the relevant parts of the code and
    check there for the bug.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It allows to get an understanding of the development process. It also allows
    to jump back to any moment in time and make changes if necessary.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    It allows to keep track of logical changes, units of code that implement a
    feature or eliminate a bug.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because when coding, changes can have occurred on multiple files, and not
    keeping track of it will go against the rule of saving one whole logical change.

How can you use the commands git log and git diff to view the history of files?

    Git log will show the history of all commits and descriptions to them.
    Git diff allows to verify the changes in the code, line by line of two commits.

How might using version control make you more confident to make changes that
could break something?

    It allow to keep a working copy of the files, and do changes on another version
    of the files that will not affect the working version.

Now that you have your workspace set up, what do you want to try using Git for?

    Write code with python, ROS, c++, django, javascript.
